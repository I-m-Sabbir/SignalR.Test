@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<style>
    .message {
        height: 500px;
        padding: 32px 10px;
        font-family: Poppins;
        font-size: 16px;
        border: 1px solid black;
        border-radius: 5px;
        overflow-y: scroll;
    }

    .messageBodyTo {
        background-color: dodgerblue;
        padding: 5px;
        border-radius: 15px;
        text-align: justify;
        width: fit-content;
    }

    .messageBodyFrom {
        background-color: deepskyblue;
        padding: 5px;
        border-radius: 15px;
        text-align: justify;
        width: fit-content;
        margin-left: 150px;
    }

    #messageText {
        border: 1px solid grey;
        border-radius: 5px;
    }

    textarea {
        resize: none;
    }

    sup {
        background-color:chartreuse;
        border-radius: 50%;
        padding: 0rem .30rem;
        box-shadow: .1rem .1rem;
        font-weight: 600;
    }

    .userList:hover{
        font-size: 20px;
        font-display:block;
    }

</style>

@{
    if (SignInManager.IsSignedIn(User))
    {

        var userList = UserManager.Users.Where(u => u.Email != User.Identity!.Name).Select(x => new { x.Id, x.Email }).ToList();

    <ol>
                @foreach (var user in userList)
            {
                    <li class="userList">
                        <a href="#" onclick="renderMessageBox(this)" data-id="@user.Id" data-email="@user.Email">@user.Email</a>
                    </li>
            }
    </ol>

    <input type="hidden" value="@User.Identity!.Name" id="user" />
    <input type="hidden" id="receiver" />
    <input type="hidden" id="receiverEmail" />

    <div id="messageArea" class="container" style="display: none;">

                <div class="card">
                    <div class="card-header"><h4>All Messages</h4></div>
                    <div class="card-body message">
                        <div id="messageBody">
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="sendMessage">
                            <div class="row">
                                <textarea class="col-md-10" id="messageText" rows="2"></textarea>
                                <button onclick="submitMessage()" class="btn btn-outline-success btn-sm rounded col-md-2">Send</button>
                            </div>
                        </div>
                    </div>
                </div>
    </div>
    }
}

<script src="~/lib/signalR/signalr.js"></script>
<script src="~/lib/signalR/chat.js"></script>
<script>
    function renderMessageBox(data) {
        var messageArea = document.getElementById("messageArea");
        messageArea.style.display = "none";

        var receiverId = data.getAttribute("data-id");
        var receiver = document.getElementById("receiver");
        receiver.value = receiverId;

        var receiverEmail = data.getAttribute("data-email");
        var receiver2 = document.getElementById("receiverEmail");
        receiver2.value = receiverEmail;

        var senderEmail = document.getElementById("user").value;

        RequestPreviousMessage(receiverId, senderEmail);

        let sup = data.parentElement.getElementsByTagName('sup')[0];
        if (sup != undefined)
            sup.remove();

        messageArea.style.display = "";
    }

    const msgBox = document.getElementById('messageText');
    msgBox.addEventListener('keydown', function (e) {
        if ((e.key === 'Enter' || e.keyCode === 13) && e.ctrlKey) {
            return this.value = this.value + "\n";
        }
        else if ((e.key === 'Enter' || e.keyCode === 13) && !e.ctrlKey) {
            e.preventDefault();
            submitMessage();
        }
    });
</script>